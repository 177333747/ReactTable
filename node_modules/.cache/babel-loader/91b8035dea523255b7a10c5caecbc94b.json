{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\ReactTable-4\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Loader from './loader/loader';\nimport Table from './table/table';\nimport _ from 'lodash';\nimport ReactPaginate from 'react-paginate';\nimport DetailRowView from './detailRowView/detailRowView';\nimport ModeSelector from './ModeSelector/ModeSelector';\nimport Search from './search/search';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isModeSelected: false,\n      isLoading: false,\n      data: [],\n      sort: 'asc',\n      //desc\n      search: '',\n      sortField: 'id',\n      row: null,\n      currentPage: 0\n    };\n\n    this.onSort = sortField => {\n      const clonedData = this.state.data.concat();\n      const sort = this.state.sort === 'asc' ? 'desc' : 'asc';\n\n      const data = _.orderBy(clonedData, sortField, sort);\n\n      this.setState({\n        data,\n        sort,\n        sortField\n      });\n    };\n\n    this.modeSelectHandler = url => {\n      this.setState({\n        isModeSelected: true,\n        isLoading: true\n      });\n      this.fetchData(url);\n    };\n\n    this.onRowSelect = row => {\n      this.setState({\n        row\n      });\n    };\n\n    this.handlePageClick = ({\n      selected\n    }) => {\n      this.setState({\n        currentPage: selected\n      });\n    };\n\n    this.searchHandler = search => {\n      this.setState({\n        search,\n        currentPage: 0\n      }); //сбрасывает текущую страницу на первую\n    };\n  }\n\n  async fetchData(url) {\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      isLoading: false,\n      data: _.orderBy(data, this.state.sortField, this.state.sort)\n    });\n  }\n\n  getFilteredData() {\n    const {\n      data,\n      search\n    } = this.state;\n\n    if (!search) {\n      return data; //Если строка пустая возвращаем data\n    }\n\n    return data.filter(item => {\n      return item['firstName'].toLowerCase().includes(search.toLowerCase()) || item['lastName'].toLowerCase().includes(search.toLowerCase()) || item['email'].toLowerCase().includes(search.toLowerCase()) || item['phone'].toLowerCase().includes(search.toLowerCase());\n    });\n  }\n\n  render() {\n    const pageSize = 50;\n\n    if (!this.state.isModeSelected) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(ModeSelector, {\n          onSelect: this.modeSelectHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this);\n    }\n\n    const filteredData = this.getFilteredData();\n    const pageCount = Math.ceil(filteredData.length / pageSize);\n\n    const displayData = _.chunk(filteredData, pageSize)[this.state.currentPage];\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [this.state.isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Search, {\n          onSearch: this.searchHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          data: displayData,\n          onSort: this.onSort,\n          sort: this.state.sort,\n          sortField: this.state.sortField,\n          onRowSelect: this.onRowSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), this.state.data.length > pageSize ? /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        previousLabel: '<',\n        nextLabel: '>',\n        breakLabel: '...',\n        breakClassName: 'break-me',\n        pageCount: pageCount,\n        marginPagesDisplayed: 2,\n        pageRangeDisplayed: 5,\n        onPageChange: this.handlePageClick,\n        containerClassName: 'pagination',\n        activeClassName: 'active',\n        pageClassName: \"page-item\",\n        pageLinkClassName: \"page-link\",\n        previousClassName: \"page-item\",\n        nextClassName: \"page-item\",\n        nextLinkClassName: \"page-link\",\n        previousLinkClassName: \"page-link\",\n        forcePage: this.state.currentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this) : null, this.state.row ? /*#__PURE__*/_jsxDEV(DetailRowView, {\n        person: this.state.row\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/ReactTable-4/src/App.js"],"names":["React","Component","Loader","Table","_","ReactPaginate","DetailRowView","ModeSelector","Search","App","state","isModeSelected","isLoading","data","sort","search","sortField","row","currentPage","onSort","clonedData","concat","orderBy","setState","modeSelectHandler","url","fetchData","onRowSelect","handlePageClick","selected","searchHandler","response","fetch","json","getFilteredData","filter","item","toLowerCase","includes","render","pageSize","filteredData","pageCount","Math","ceil","length","displayData","chunk"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Loader from './loader/loader'\r\nimport Table from './table/table'\r\nimport _ from 'lodash'\r\nimport ReactPaginate from 'react-paginate';\r\nimport DetailRowView from './detailRowView/detailRowView'\r\nimport ModeSelector from './ModeSelector/ModeSelector'\r\nimport Search from './search/search'\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    isModeSelected: false,\r\n    isLoading: false,\r\n    data: [],\r\n    sort: 'asc', //desc\r\n    search: '',\r\n    sortField: 'id',\r\n    row: null,\r\n    currentPage: 0,\r\n    \r\n\r\n  }\r\n\r\n  async fetchData(url) {\r\n    const response = await fetch(url)\r\n    const data = await response.json();\r\n    this.setState({\r\n      isLoading: false,\r\n      data: _.orderBy(data, this.state.sortField, this.state.sort)\r\n\r\n    })\r\n\r\n  }\r\n\r\n  onSort = sortField => {\r\n    const clonedData = this.state.data.concat()\r\n    const sort = this.state.sort === 'asc' ? 'desc' : 'asc'\r\n    const data = _.orderBy(clonedData, sortField, sort)\r\n\r\n\r\n    this.setState({\r\n      data,\r\n      sort,\r\n      sortField\r\n    })\r\n\r\n  }\r\n\r\n  \r\n  modeSelectHandler = url => {\r\n    this.setState({\r\n      isModeSelected: true,\r\n      isLoading: true\r\n\r\n    })\r\n\r\n    this.fetchData(url)\r\n   \r\n  }\r\n\r\nonRowSelect = row => {\r\n    this.setState({ row })\r\n  }\r\n\r\n\r\n  handlePageClick = ({selected}) => {\r\n    this.setState({currentPage: selected})\r\n  }\r\n\r\n  searchHandler = search => {\r\n   this.setState({search, currentPage: 0}) //сбрасывает текущую страницу на первую\r\n  }\r\n\r\n  getFilteredData() {\r\n    const{data,search} = this.state\r\n  \r\n    if(!search){\r\n      return data  //Если строка пустая возвращаем data\r\n    }\r\n\r\n    return data.filter(item =>{\r\n      return item['firstName'].toLowerCase().includes(search.toLowerCase())\r\n      || item['lastName'].toLowerCase().includes(search.toLowerCase())\r\n      || item['email'].toLowerCase().includes(search.toLowerCase())\r\n      || item['phone'].toLowerCase().includes(search.toLowerCase())\r\n    })\r\n\r\n  }\r\n\r\n  render() {\r\n    const pageSize = 50\r\n    if (!this.state.isModeSelected) {\r\n      return (\r\n        <div className=\"container\">\r\n          <ModeSelector onSelect={this.modeSelectHandler} />\r\n        </div>\r\n      )\r\n    }\r\n\r\n    const filteredData = this.getFilteredData()\r\n\r\n\r\n    const pageCount = Math.ceil(filteredData.length/pageSize)\r\n\r\n    const displayData = _.chunk(filteredData, pageSize)[this.state.currentPage]\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        {\r\n        this.state.isLoading\r\n          ? <Loader />\r\n          : <React.Fragment>\r\n            <Search onSearch={this.searchHandler}/> \r\n             <Table\r\n            data={displayData}\r\n            onSort={this.onSort}\r\n            sort={this.state.sort}\r\n            sortField={this.state.sortField}\r\n            onRowSelect={this.onRowSelect}\r\n          />\r\n          </React.Fragment>\r\n          \r\n        }\r\n\r\n        {\r\n        \r\n        this.state.data.length > pageSize\r\n        ?   <ReactPaginate\r\n        previousLabel={'<'}\r\n        nextLabel={'>'}\r\n        breakLabel={'...'}\r\n        breakClassName={'break-me'}\r\n        pageCount={pageCount}\r\n        marginPagesDisplayed={2}\r\n        pageRangeDisplayed={5}\r\n        onPageChange={this.handlePageClick}\r\n        containerClassName={'pagination'}\r\n        activeClassName={'active'}\r\n        pageClassName = \"page-item\"\r\n        pageLinkClassName = \"page-link\"\r\n        previousClassName= \"page-item\"\r\n        nextClassName = \"page-item\"\r\n        nextLinkClassName =  \"page-link\"\r\n        previousLinkClassName =  \"page-link\"\r\n        forcePage={this.state.currentPage}\r\n         /> :null\r\n        \r\n        }\r\n\r\n        \r\n        {\r\n          this.state.row\r\n            ? <DetailRowView person={this.state.row} />\r\n            : null\r\n        }\r\n\r\n      </div>\r\n    );\r\n\r\n\r\n\r\n  };\r\n\r\n}\r\nexport default App;"]},"metadata":{},"sourceType":"module"}