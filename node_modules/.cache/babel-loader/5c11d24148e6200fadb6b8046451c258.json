{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\OpenServer\\\\domains\\\\my-app\\\\my-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Loader from './loader/loader';\nimport Table from './table/table';\nimport _ from 'lodash';\nimport ReactPaginate from 'react-paginate';\nimport DetailRowView from './detailRowView/detailRowView';\nimport ModeSelector from './ModeSelector/ModeSelector';\nimport Search from './search/search';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isModeSelected: false,\n      isLoading: false,\n      data: [],\n      sort: 'asc',\n      //desc\n      sortField: 'id',\n      row: null,\n      currentPage: 0\n    };\n\n    this.onSort = sortField => {\n      const clonedData = this.state.data.concat();\n      const sort = this.state.sort === 'asc' ? 'desc' : 'asc';\n\n      const data = _.orderBy(clonedData, sortField, sort);\n\n      this.setState({\n        data,\n        sort,\n        sortField\n      });\n    };\n\n    this.modeSelectHandler = url => {\n      this.setState({\n        isModeSelected: true,\n        isLoading: true\n      });\n      this.fetchData(url);\n    };\n\n    this.onRowSelect = row => {\n      this.setState({\n        row\n      });\n    };\n\n    this.handlePageClick = ({\n      selected\n    }) => {\n      this.setState({\n        currentPage: selected\n      });\n    };\n  }\n\n  async fetchData(url) {\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      isLoading: false,\n      data: _.orderBy(data, this.state.sortField, this.state.sort)\n    });\n  }\n\n  render() {\n    const pageSize = 50;\n\n    if (!this.state.isModeSelected) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(ModeSelector, {\n          onSelect: this.modeSelectHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this);\n    }\n\n    const displayData = _.chunk(this.state.data, pageSize)[this.state.currentPage];\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [this.state.isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          data: displayData,\n          onSort: this.onSort,\n          sort: this.state.sort,\n          sortField: this.state.sortField,\n          onRowSelect: this.onRowSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), this.state.data.length > pageSize ? /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        previousLabel: '<',\n        nextLabel: '>',\n        breakLabel: '...',\n        breakClassName: 'break-me',\n        pageCount: 20,\n        marginPagesDisplayed: 2,\n        pageRangeDisplayed: 5,\n        onPageChange: this.handlePageClick,\n        containerClassName: 'pagination',\n        activeClassName: 'active',\n        pageClassName: \"page-item\",\n        pageLinkClassName: \"page-link\",\n        previousClassName: \"page-item\",\n        nextClassName: \"page-item\",\n        nextLinkClassName: \"page-link\",\n        previousLinkClassName: \"page-link\",\n        forcePage: this.state.currentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this) : null, this.state.row ? /*#__PURE__*/_jsxDEV(DetailRowView, {\n        person: this.state.row\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/OpenServer/domains/my-app/my-app/src/App.js"],"names":["React","Component","Loader","Table","_","ReactPaginate","DetailRowView","ModeSelector","Search","App","state","isModeSelected","isLoading","data","sort","sortField","row","currentPage","onSort","clonedData","concat","orderBy","setState","modeSelectHandler","url","fetchData","onRowSelect","handlePageClick","selected","response","fetch","json","render","pageSize","displayData","chunk","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Loader from './loader/loader'\nimport Table from './table/table'\nimport _ from 'lodash'\nimport ReactPaginate from 'react-paginate';\nimport DetailRowView from './detailRowView/detailRowView'\nimport ModeSelector from './ModeSelector/ModeSelector'\nimport Search from './search/search'\n\nclass App extends Component {\n\n  state = {\n    isModeSelected: false,\n    isLoading: false,\n    data: [],\n    sort: 'asc', //desc\n    sortField: 'id',\n    row: null,\n    currentPage: 0\n\n  }\n\n  async fetchData(url) {\n    const response = await fetch(url)\n    const data = await response.json();\n    this.setState({\n      isLoading: false,\n      data: _.orderBy(data, this.state.sortField, this.state.sort)\n\n    })\n\n  }\n\n  onSort = sortField => {\n    const clonedData = this.state.data.concat()\n    const sort = this.state.sort === 'asc' ? 'desc' : 'asc'\n    const data = _.orderBy(clonedData, sortField, sort)\n\n\n    this.setState({\n      data,\n      sort,\n      sortField\n    })\n\n  }\n\n  \n  modeSelectHandler = url => {\n    this.setState({\n      isModeSelected: true,\n      isLoading: true\n\n    })\n\n    this.fetchData(url)\n   \n  }\n\nonRowSelect = row => {\n    this.setState({ row })\n  }\n\n\n  handlePageClick = ({selected}) => {\n    this.setState({currentPage: selected})\n  }\n\n\n  render() {\n    const pageSize = 50\n    if (!this.state.isModeSelected) {\n      return (\n        <div className=\"container\">\n          <ModeSelector onSelect={this.modeSelectHandler} />\n        </div>\n      )\n    }\n\n    const displayData = _.chunk(this.state.data, pageSize)[this.state.currentPage]\n\n    return (\n      <div className=\"container\">\n        {\n        this.state.isLoading\n          ? <Loader />\n          : <React.Fragment>\n            <Search /> \n             <Table\n            data={displayData}\n            onSort={this.onSort}\n            sort={this.state.sort}\n            sortField={this.state.sortField}\n            onRowSelect={this.onRowSelect}\n          />\n          </React.Fragment>\n          \n        }\n\n        {\n        \n        this.state.data.length > pageSize\n        ?   <ReactPaginate\n        previousLabel={'<'}\n        nextLabel={'>'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={20}\n        marginPagesDisplayed={2}\n        pageRangeDisplayed={5}\n        onPageChange={this.handlePageClick}\n        containerClassName={'pagination'}\n        activeClassName={'active'}\n        pageClassName = \"page-item\"\n        pageLinkClassName = \"page-link\"\n        previousClassName= \"page-item\"\n        nextClassName = \"page-item\"\n        nextLinkClassName =  \"page-link\"\n        previousLinkClassName =  \"page-link\"\n        forcePage={this.state.currentPage}\n         /> :null\n        \n        }\n\n        \n        {\n          this.state.row\n            ? <DetailRowView person={this.state.row} />\n            : null\n        }\n\n      </div>\n    );\n\n\n\n  };\n\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}