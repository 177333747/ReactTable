{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\OpenServer\\\\domains\\\\my-app\\\\my-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Loader from './loader/loader';\nimport Table from './table/table';\nimport _ from 'lodash';\nimport DetailRowView from './detailRowView/detailRowView';\nimport ModeSelector from './ModeSelector/modeSelector';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isModeSelected: false,\n      isLoading: false,\n      data: [],\n      sort: 'asc',\n      //desc\n      sortField: 'id',\n      row: null\n    };\n\n    this.onSort = sortField => {\n      const clonedData = this.state.data.concat();\n      const sortType = this.state.sort === 'asc' ? 'desc' : 'asc';\n\n      const orderedData = _.orderBy(clonedData, sortField, sortType);\n\n      this.setState({\n        data: orderedData,\n        sort: sortType,\n        sortField\n      });\n    };\n\n    this.onRowSelect = row => {\n      this.setState({\n        row\n      });\n    };\n\n    this.modeSelectHandler = url => {\n      this.setState({\n        isModeSelected: true,\n        isLoading: true\n      });\n      this.fetchData(url);\n    };\n  }\n\n  async fetchData() {\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      isLoading: false,\n      data: _.orderBy(data, this.state.sortField, this.state.sort)\n    });\n  }\n\n  render() {\n    if (this.state.isModeSelected) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(ModeSelector, {\n          onSelect: this.modeSelectHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [this.state.isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Table, {\n        data: this.state.data,\n        onSort: this.onSort,\n        sort: this.state.sort,\n        sortField: this.state.sortField,\n        onRowSelect: this.onRowSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), this.state.row ? /*#__PURE__*/_jsxDEV(DetailRowView, {\n        person: this.state.row\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/OpenServer/domains/my-app/my-app/src/App.js"],"names":["React","Component","Loader","Table","_","DetailRowView","ModeSelector","App","state","isModeSelected","isLoading","data","sort","sortField","row","onSort","clonedData","concat","sortType","orderedData","orderBy","setState","onRowSelect","modeSelectHandler","url","fetchData","response","fetch","json","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Loader from './loader/loader'\nimport Table from './table/table'\nimport _ from 'lodash'\nimport DetailRowView from './detailRowView/detailRowView'\nimport ModeSelector from './ModeSelector/modeSelector'\n\nclass App extends Component {\n\n  state = {\n    isModeSelected: false,\n    isLoading: false,\n    data: [],\n    sort: 'asc', //desc\n    sortField: 'id',\n    row: null,\n\n  }\n\n  async fetchData() {\n    const response = await fetch(url)\n    const data = await response.json();\n    this.setState({\n      isLoading: false,\n      data: _.orderBy(data, this.state.sortField, this.state.sort)\n\n    })\n\n\n  }\n\n  onSort = sortField => {\n    const clonedData = this.state.data.concat()\n    const sortType = this.state.sort === 'asc' ? 'desc' : 'asc'\n\n    const orderedData = _.orderBy(clonedData, sortField, sortType)\n\n\n    this.setState({\n      data: orderedData,\n      sort: sortType,\n      sortField\n    })\n\n  }\n\n  onRowSelect = row => {\n    this.setState({ row })\n  }\n\n  modeSelectHandler = url => {\n \n    this.setState({\n      isModeSelected: true,\n      isLoading: true\n\n    })\n    this.fetchData(url)\n  }\n\n  render() {\n    if (this.state.isModeSelected) {\n      return (\n        <div className=\"container\">\n          <ModeSelector onSelect={this.modeSelectHandler} />\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"container\">\n        {this.state.isLoading\n          ? <Loader />\n          : <Table\n            data={this.state.data}\n            onSort={this.onSort}\n            sort={this.state.sort}\n            sortField={this.state.sortField}\n            onRowSelect={this.onRowSelect}\n          />\n\n        }\n        {\n          this.state.row\n            ? <DetailRowView person={this.state.row} />\n            : null\n        }\n\n      </div>\n    );\n\n\n\n  };\n\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}